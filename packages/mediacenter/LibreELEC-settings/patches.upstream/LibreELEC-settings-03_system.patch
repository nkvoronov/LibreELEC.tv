diff -Naur a/resources/lib/modules/system.py b/resources/lib/modules/system.py
--- a/resources/lib/modules/system.py	2021-03-10 05:37:21.000000000 +0200
+++ b/resources/lib/modules/system.py	2021-04-04 00:53:22.000000000 +0300
@@ -113,6 +113,30 @@
                         'values': [],
                         'InfoText': 713,
                         },
+                        'KeyboardSwitches': {
+                            'order': 6,
+                            'name': 32403,
+                            'value': 'grp-ctrl_shift_toggle',
+                            'action': 'set_keyboard_layout',
+                            'type': 'multivalue',
+                            'values': [],
+                            'InfoText': 799,
+                            },
+                        },
+                    },
+                'locale': {
+                     'order': 3,
+                    'name': 32402,
+                    'settings': {
+                        'SystemLocale': {
+                            'name': 32404,
+                            'value': 'en_GB',
+                            'action': 'set_locales',
+                            'type': 'multivalue',
+                            'values': [],
+                            'InfoText': 1702,
+                            'order': 1,
+                            },
                     },
                 },
             'pinlock': {
@@ -217,6 +241,7 @@
         self.set_hostname()
         self.set_keyboard_layout()
         self.set_hw_clock()
+        self.set_locales()
         del self.is_service
 
     @log.log_function()
@@ -231,12 +256,18 @@
             arrLayouts,
             arrTypes,
             self.arrVariants,
-            ) = self.get_keyboard_layouts()
+            arrOptions
+        ) = self.get_keyboard_layouts()
         if not arrTypes is None:
             self.struct['keyboard']['settings']['KeyboardType']['values'] = arrTypes
             value = oe.read_setting('system', 'KeyboardType')
+        if not value is None:
+            self.struct['keyboard']['settings']['KeyboardType']['value'] = value
+        if not arrOptions is None:
+            self.struct['keyboard']['settings']['KeyboardSwitches']['values'] = arrOptions
+            value = self.oe.read_setting('system', 'KeyboardSwitches')
             if not value is None:
-                self.struct['keyboard']['settings']['KeyboardType']['value'] = value
+                self.struct['keyboard']['settings']['KeyboardSwitches']['value'] = value
         if not arrLayouts is None:
             self.struct['keyboard']['settings']['KeyboardLayout1']['values'] = arrLayouts
             self.struct['keyboard']['settings']['KeyboardLayout2']['values'] = arrLayouts
@@ -264,6 +295,13 @@
         self.struct['ident']['settings']['hostname']['value'] = hostname.get_hostname()
         # PIN Lock
         self.struct['pinlock']['settings']['pinlock_enable']['value'] = '1' if oe.PIN.isEnabled() else '0'
+        # Locales
+        arrLocales = self.get_locales()
+        if not arrLocales is None:
+            self.struct['locale']['settings']['SystemLocale']['values'] = arrLocales
+            value = self.oe.read_setting('system', 'SystemLocale')
+            if not value is None:
+                self.struct['locale']['settings']['SystemLocale']['value'] = value
 
     @log.log_function()
     def load_menu(self, focusItem):
@@ -291,7 +329,8 @@
                     ]['KeyboardLayout2']['value']]
             log.log(str(self.struct['keyboard']['settings']['KeyboardLayout1']['value']) + ','
                             + str(self.struct['keyboard']['settings']['KeyboardLayout2']['value']) + ' ' + '-model '
-                            + str(self.struct['keyboard']['settings']['KeyboardType']['value']), log.INFO)
+                            + str(self.struct['keyboard']['settings']['KeyboardType']['value']) + ' ' + '-group '
+                            + str(self.struct['keyboard']['settings']['KeyboardSwitches']['value']), log.INFO)
             if not os.path.exists(os.path.dirname(self.UDEV_KEYBOARD_INFO)):
                 os.makedirs(os.path.dirname(self.UDEV_KEYBOARD_INFO))
             config_file = open(self.UDEV_KEYBOARD_INFO, 'w')
@@ -299,7 +338,9 @@
             config_file.write(f"XKBVARIANT=\"{self.struct['keyboard']['settings']['KeyboardVariant1']['value']}, \
                                              {self.struct['keyboard']['settings']['KeyboardVariant2']['value']}\"\n")
             config_file.write(f"XKBLAYOUT=\"{self.struct['keyboard']['settings']['KeyboardLayout1']['value']}, {self.struct['keyboard']['settings']['KeyboardLayout2']['value']}\"\n")
-            config_file.write('XKBOPTIONS="grp:alt_shift_toggle"\n')
+            KbdOpt = self.struct['keyboard']['settings']['KeyboardSwitches']['value']
+            KbdOpt = 'grp:' + KbdOpt.replace('+','_') + '_toggle'
+            config_file.write('XKBOPTIONS="' + KbdOpt + '"\n')
             config_file.close()
             parameters = [
                 '-display ' + os.environ['DISPLAY'],
@@ -308,7 +349,7 @@
                 '-variant ' + self.struct['keyboard']['settings']['KeyboardVariant1']['value'] + ',' + self.struct['keyboard']['settings'
                         ]['KeyboardVariant2']['value'],
                 '-model ' + str(self.struct['keyboard']['settings']['KeyboardType']['value']),
-                '-option "grp:alt_shift_toggle"',
+                '-option ' + KbdOpt,
                 ]
             oe.execute('setxkbmap ' + ' '.join(parameters))
         elif self.nox_keyboard_layouts == True:
@@ -327,10 +368,33 @@
             hostname.set_hostname(value)
 
     @log.log_function()
+    def get_locales(self):
+        # get list locales
+        arrLocales = []
+        for root, dirs, files in os.walk('/usr/share/i18n/locales'):
+            for filename in files:
+                if (filename == 'POSIX') or (filename.find('translit_') != -1) or (filename.find('iso') != -1) or (filename.find('i18n') != -1):
+                    continue
+                arrLocales.append(filename)
+        arrLocales.sort()
+        return arrLocales
+
+    @log.log_function()
+    def set_locales(self, listItem=None):
+        oldLocale = self.oe.read_setting('system', 'SystemLocale')
+        if not listItem == None:
+            self.set_value(listItem)
+        # update locales
+        newLocale = self.struct['locale']['settings']['SystemLocale']['value']
+        if oldLocale != newLocale:
+            subprocess.call(['/usr/bin/generate_locale', newLocale])
+
+    @log.log_function()
     def get_keyboard_layouts(self):
         arrLayouts = []
         arrVariants = {}
         arrTypes = []
+        arrOptions = []
         if os.path.exists(self.NOX_KEYBOARD_INFO):
             for layout in glob.glob(f'{self.NOX_KEYBOARD_INFO}/*/*.bmap'):
                 if os.path.isfile(layout):
@@ -378,8 +442,21 @@
                             if subnode_2.nodeName == 'description':
                                 if hasattr(subnode_2.firstChild, 'nodeValue'):
                                     arrTypes.append(subnode_2.firstChild.nodeValue + ':' + value)
+            for xml_layout in xml_conf.getElementsByTagName('option'):
+                for subnode_1 in xml_layout.childNodes:
+                    if subnode_1.nodeName == 'configItem':
+                        for subnode_2 in subnode_1.childNodes:
+                            if subnode_2.nodeName == 'name':
+                                if hasattr(subnode_2.firstChild,'nodeValue'):
+                                    ovalue = subnode_2.firstChild.nodeValue
+                                if subnode_2.nodeName == 'description':
+                                    if hasattr(subnode_2.firstChild,'nodeValue'):
+                                        if (ovalue.find('grp:') != -1) and (ovalue.find('_toggle') != -1):
+                                            ovalue = ovalue.replace('grp:','').replace('_toggle','').replace('_','+')
+                                            arrOptions.append(subnode_2.firstChild.nodeValue + ':' + ovalue)
             arrLayouts.sort()
             arrTypes.sort()
+            arrOptions.sort()
         else:
             log.log('No keyboard layouts found)')
             return (None, None, None)
@@ -387,6 +464,7 @@
             arrLayouts,
             arrTypes,
             arrVariants,
+            arrOptions
             )
 
     @log.log_function()
