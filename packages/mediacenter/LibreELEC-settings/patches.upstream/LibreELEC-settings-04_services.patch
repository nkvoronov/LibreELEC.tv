diff -Naur a/resources/lib/modules/services.py b/resources/lib/modules/services.py
--- a/resources/lib/modules/services.py	2021-03-10 05:37:21.000000000 +0200
+++ b/resources/lib/modules/services.py	2021-04-04 01:05:59.000000000 +0300
@@ -31,6 +31,8 @@
     OPT_SSH_NOPASSWD = None
     AVAHI_DAEMON = None
     CRON_DAEMON = None
+    LCD_DRIVER_DIR = None
+    D_LCD_DRIVER = None
     menu = {'7': {
         'name': 32001,
         'menuLoader': 'load_menu',
@@ -216,6 +218,33 @@
                     'InfoText': 745,
                     }},
                 },
+            'driver': {
+                'order': 5,
+                'name': 32007,
+                'settings': {
+                    'lcd_enabled': {
+                        'name': 32400,
+                        'value': 'none',
+                        'action': 'set_lcd_driver',
+                        'type': 'bool',
+                        'InfoText': 717,
+                        'order': 1,
+                        },
+                    'lcd': {
+                        'name': 32008,
+                        'value': 'none',
+                        'action': 'set_lcd_driver',
+                        'type': 'multivalue',
+                        'parent': {
+                            'entry': 'lcd_enabled',
+                            'value': ['1'],
+                            },
+                        'values': [],
+                        'InfoText': 717,
+                        'order': 2,
+                        },
+                    },
+                },
             'bluez': {
                 'order': 6,
                 'name': 32331,
@@ -301,6 +330,12 @@
 
     @log.log_function()
     def load_values(self):
+        # LCD
+        arrLcd = self.get_lcd_drivers()
+        self.struct['driver']['settings']['lcd']['values'] = arrLcd
+        self.struct['driver']['settings']['lcd_enabled']['value'] = self.oe.get_service_state('lcdd')
+        self.struct['driver']['settings']['lcd']['value'] = self.oe.get_service_option('lcdd', 'LCD_DRIVER',
+            self.D_LCD_DRIVER).replace('"','')
         # SAMBA
         if os.path.isfile(self.SAMBA_NMDB) and os.path.isfile(self.SAMBA_SMDB):
             self.struct['samba']['settings']['samba_autostart']['value'] = oe.get_service_state('samba')
@@ -464,6 +499,26 @@
         oe.set_service('obexd', options, state)
 
     @log.log_function()
+    def set_lcd_driver(self, listItem=None):
+        state = 0
+        options = {}
+        if not listItem == None:
+            self.set_value(listItem)
+        if self.struct['driver']['settings']['lcd_enabled']['value'] == '1':
+            state = 1
+        if not self.struct['driver']['settings']['lcd']['value'] is None and not self.struct['driver']['settings']['lcd']['value'] == 'none' and state == 1:
+            options['LCD_DRIVER'] = '"%s"' % self.struct['driver']['settings']['lcd']['value']
+        self.oe.set_service('lcdd', options, state)
+
+    @log.log_function()
+    def get_lcd_drivers(self):
+        arrDrivers = ['none']
+        if os.path.exists(self.LCD_DRIVER_DIR):
+            for driver in glob.glob(self.LCD_DRIVER_DIR + '*'):
+                arrDrivers.append(os.path.basename(driver).replace('.so', ''))
+        return arrDrivers
+
+    @log.log_function()
     def idle_timeout(self, **kwargs):
         if 'listItem' in kwargs:
             self.set_value(kwargs['listItem'])
