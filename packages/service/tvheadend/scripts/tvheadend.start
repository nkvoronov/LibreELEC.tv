#!/bin/sh

################################################################################
#      This file is part of OpenELEC - http://www.openelec.tv
#      Copyright (C) 2009-2012 Stephan Raue (stephan@openelec.tv)
#
#  This Program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2, or (at your option)
#  any later version.
#
#  This Program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with OpenELEC.tv; see the file COPYING.  If not, write to
#  the Free Software Foundation, 51 Franklin Street, Suite 500, Boston, MA 02110, USA.
#  http://www.gnu.org/copyleft/gpl.html
################################################################################

# can be called from openelec addon.
# ensure that environment is sane

. /etc/profile

LOG_TVHEADEND="/var/log/tvheadend.log"
TVHEADEND_HOME="$HOME/.config/tvheadend"

if [ -f /storage/.cache/services/tvheadend.conf ]; then
    . /storage/.cache/services/tvheadend.conf

    if [ -f /storage/.cache/services/dvb.conf ]; then
       . /storage/.cache/services/dvb.conf
    fi

    echo  "Starting HTS TVHeadend server ..."
    
    if [ "$TVHEADEND_ADAPTERS" != "" ]; then
       TVHEADEND_ARG="-a $TVHEADEND_ADAPTERS"
    else
       TVHEADEND_ARG=""
    fi

    if [ "$TVHEADEND_BACKUP" != "true" ] ; then
        TVHEADEND_ARG="$TVHEADEND_ARG -B"
    fi

    if [ "$TVHEADEND_DEBUG" == "true" ]; then
       TVHEADEND_ARG="$TVHEADEND_ARG -C -s -u root -g video -c $TVHEADEND_HOME"
    else
       TVHEADEND_ARG="$TVHEADEND_ARG -C -u root -g video -c $TVHEADEND_HOME"
    fi

    # start userspace DVB driver/addon
    for driver_dvb in $(find /storage/.xbmc/addons/driver.dvb.*/bin/userspace-driver.sh -type f 2>/dev/null); do
        driver_dvb_name=$(echo $driver_dvb | awk 'BEGIN {FS="/"} {printf("%s", $5)}')
        logger -t VDR "### Loading userspace DVB driver: $driver_dvb_name ###"
        # use ". " because of variable export
        . $driver_dvb
    done

    # (wait for) at least 1 adapter (xbmc allows to set 0)
    [ "$DVB_NUM_ADAPTERS" == "" ] && DVB_NUM_ADAPTERS=1
    [ $DVB_NUM_ADAPTERS -lt 1 ] && DVB_NUM_ADAPTERS=1

    if [ "$DVB_WAIT_FOR_FEINIT" == "true" ] ; then
        while [ true ] ; do
            if [ -e /dev/dvb/adapter$((DVB_NUM_ADAPTERS-1))/frontend0 ] ; then
                break
            fi
            sleep 1
        done
    fi

    if [ "$TVHEADEND_PRELOAD_CAPMT_CA" == "true" ] ; then
	logger -t Tvheadend "### Preloading capmt_ca.so library ###"
	LD_PRELOAD="usr/lib/capmt_ca.so $LD_PRELOAD" exec tvheadend $TVHEADEND_ARG &>$LOG_TVHEADEND
    else
	exec tvheadend $TVHEADEND_ARG &>$LOG_TVHEADEND
    fi
fi