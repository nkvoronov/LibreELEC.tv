diff -Naur lcdproc-0.5.6-old/LCDd.conf lcdproc-0.5.6-new/LCDd.conf
--- lcdproc-0.5.6-old/LCDd.conf	2012-08-19 17:29:07.000000000 +0300
+++ lcdproc-0.5.6-new/LCDd.conf	2013-03-26 02:49:34.931626779 +0200
@@ -634,7 +634,7 @@
 # hd44780_cp1251, hd44780_8859_5 ] (upd16314, hd44780_koi8_r,
 # hd44780_cp1251, hd44780_8859_5 are possible if compiled with additional
 # charmaps)
-CharMap=hd44780_euro
+CharMap=hd44780_cp1251
 
 ## Soundgraph iMON LCD ##
 [imonlcd]
@@ -642,13 +642,13 @@
 # [legal: 0, 1; default: 0]
 # Choose 0 for 15c2:ffdc device,
 # Choose 1 for 15c2:0038 device
-Protocol=0
+Protocol=1
 
 # Set the exit behavior [legal: 0-2; default: 1]
 # 0 means leave shutdown message,
 # 1 means show the big clock,
 # 2 means blank device
-#OnExit=2
+OnExit=1
 
 # Select the output device to use [default: /dev/lcd0]
 Device=/dev/lcd0
@@ -665,9 +665,9 @@
 # Set the disc mode [legal: 0,1; default: 0]
 # 0 => spin the "slim" disc - two disc segments,
 # 1 => their complement spinning;
-#DiscMode=0
-
+DiscMode=1
 
+Font=/usr/share/lcdproc/fonts/cp1251.fnt
 
 ## IrMan driver ##
 [IrMan]
diff -Naur lcdproc-0.5.6-old/server/drivers/adv_bignum.c lcdproc-0.5.6-new/server/drivers/adv_bignum.c
--- lcdproc-0.5.6-old/server/drivers/adv_bignum.c	2012-08-19 17:29:08.000000000 +0300
+++ lcdproc-0.5.6-new/server/drivers/adv_bignum.c	2013-03-17 21:30:52.000000000 +0200
@@ -202,20 +202,20 @@
 			"   "
 		},
 		{		/* 1 */
-			"  |",
+			" /|",
 			"  |",
 			"   ",
 			"   "
 		},
 		{		/* 2 */
 			"  ]",
-			" [ ",
+			" [_",
 			"   ",
 			"   "
 		},
 		{		/* 3 */
-			"  ]",
-			"  ]",
+			" _]",
+			" _]",
 			"   ",
 			"   "
 		},
@@ -227,7 +227,7 @@
 		},
 		{		/* 5 */
 			" [ ",
-			"  ]",
+			" _]",
 			"   ",
 			"   "
 		},
@@ -251,7 +251,7 @@
 		},
 		{		/* 9 */
 			" []",
-			"  ]",
+			" _]",
 			"   ",
 			"   "
 		},
@@ -283,7 +283,7 @@
 			{"   "}
 		},
 		{		/* 1 */
-			{"  |"},
+			{" /|"},
 			{"  |"},
 			{"   "},
 			{"   "}
@@ -381,7 +381,7 @@
 			"   "
 		},
 		{		/* 1 */
-			"  |",
+			" /|",
 			"  |",
 			"   ",
 			"   "
@@ -1100,7 +1100,7 @@
 		},
 		{		/* 1 */
 			"   ",
-			"  |",
+			" /|",
 			"  |",
 			"   "
 		},
diff -Naur lcdproc-0.5.6-old/server/drivers/imonlcd.c lcdproc-0.5.6-new/server/drivers/imonlcd.c
--- lcdproc-0.5.6-old/server/drivers/imonlcd.c	2011-10-23 12:36:00.000000000 +0300
+++ lcdproc-0.5.6-new/server/drivers/imonlcd.c	2013-03-18 01:09:46.000000000 +0200
@@ -5,6 +5,11 @@
  */
 
 /*-
+ * Modified January 2010 by Sergey Umpelev <umpelev (at) gmail (dot) com>
+ * to enable loadable font support in the imonlcd driver
+ *  Added Font configuration parameter
+ *  Modified imonlcd_get_info() to show the encoding of a loaded font
+ *
  * Copyright (c) 2004, Venky Raju <dev (at) venky (dot) ws>
  *               2007, Dean Harding <dean (at) codeka dotcom>
  *               2007, Christian Leuschen <christian (dot) leuschen (at) gmx (dot) de>
@@ -51,7 +56,8 @@
 #define DEFAULT_DISCMODE     0	/**< spin the "slim" disc */
 #define DEFAULT_ON_EXIT      1	/**< show the big clock */
 #define DEFAULT_PROTOCOL     0	/**< protocol for 15c2:ffdc device */
-
+#define DEFAULT_FONT         ""
+#define DEFAULT_FONT_ENCODING         "iso-8859-15"
 
 #define ON_EXIT_SHOWMSG      0	/**< Do nothing - just leave the "shutdown"
 				 * message there */
@@ -60,6 +66,7 @@
 
 #define PROTOCOL_FFDC        0	/**< protocol ID for 15c2:ffdc device */
 #define PROTOCOL_0038        1	/**< protocol ID for 15c2:0038 device */
+#define INFO_MAXLEN          255
 
 /* Vars for the server core */
 MODULE_EXPORT char *api_version = API_VERSION;
@@ -69,7 +76,7 @@
 
 /** Private data for the \c imonlcd driver */
 typedef struct imonlcd_private_data {
-	char info[255];
+	char info[INFO_MAXLEN];
 	int imon_fd;
 
 	/* send buffer for one command or display data */
@@ -111,6 +118,11 @@
 
 	/* save the last output state so we don't needlessly reset the icons */
 	int last_output_state;
+
+	/* font data */
+	imon_font *font;
+	/* font encoding */
+	char *font_encoding;
 	int last_output_bar_state;
 } PrivateData;
 
@@ -239,6 +251,21 @@
 static void send_command_data(uint64_t commandData, PrivateData *p);
 static void send_packet(PrivateData *p);
 
+char* fgetsz(char* buf, int maxsize, FILE* file)
+{
+	int ch;
+	int read_count;
+
+	read_count=0;
+	do
+	{
+		ch = fgetc (file);
+		if (ch != EOF) buf[read_count++]=(char)ch;
+	} while (ch != EOF && ch != 0 && read_count < maxsize);
+	if (ch == EOF) return NULL;
+	return buf;
+}
+
 /**
  * Initialize the driver.
  * \param drvthis  Pointer to driver structure.
@@ -252,6 +279,7 @@
 	char buf[256];
 	int graph_width, graph_height;	/* width and height of screen, in pixels */
 	int tmp;
+	char buf1[256];
 
 	/* Allocate, initialize and store private p */
 	p = (PrivateData *) calloc(1, sizeof(PrivateData));
@@ -367,6 +395,77 @@
 	/* Get the "disc-mode" setting */
 	p->discMode = drvthis->config_get_bool(drvthis->name, "DiscMode", 0, DEFAULT_DISCMODE);
 
+	/* Default font settings */
+	p->font=default_font;
+	p->font_encoding=DEFAULT_FONT_ENCODING;
+
+	/* Get font */
+	strncpy(buf, drvthis->config_get_string(drvthis->name, "Font", 0, DEFAULT_FONT), sizeof(buf));
+	buf[sizeof(buf) - 1] = '\0';
+	if(*buf=='\0')
+	{
+	    report(RPT_INFO, "%s: using default iso-8859-15 font", drvthis->name);
+	}
+	else
+	{
+	    /*Try to load font*/
+	    FILE* font_file=fopen(buf,"r");
+	    if(font_file  == NULL)
+	    {
+		report(RPT_ERR, "%s: unable to open font file \"%s\", using default iso-8859-15 font", drvthis->name, buf);
+	    }
+	    else
+	    {
+		if (fgetsz(buf1,sizeof(buf1),font_file)  != NULL)
+		{
+			buf1[sizeof(buf1) - 1] = '\0';
+			if (strcmp(buf1,"imonlcd") == 0)
+			{
+				p->font_encoding = (char *)malloc(256);
+				if (p->font_encoding == NULL)
+				{
+					report(RPT_ERR, "%s: unable to allocate memory to store font encoding", drvthis->name);
+					return -1;
+				}
+				if(fgetsz(p->font_encoding,256,font_file)  != NULL)
+				{
+					p->font_encoding[255] = '\0';
+				}
+				else		
+				{
+					report(RPT_ERR, "%s: unable to read font encoding from file", drvthis->name);
+					free(p->font_encoding);
+					p->font_encoding=DEFAULT_FONT_ENCODING;
+					return -1;
+				}
+				p->font=(imon_font *) calloc(256, sizeof(imon_font));
+				if (p->font == NULL)
+				{
+					report(RPT_ERR, "%s: unable to allocate memory to store font data", drvthis->name);
+					return -1;
+				}
+				if(fread(p->font,sizeof(imon_font),256,font_file)  != 256)
+				{
+					report(RPT_ERR, "%s: unable to read font data from file", drvthis->name);
+					free(p->font);
+					p->font=default_font;
+					return -1;
+				}				
+			}
+			else
+			{
+				report(RPT_ERR, "%s: \"%s\" isn't a font file, using default iso-8859-15 font", drvthis->name, buf);
+			}
+		}
+		else
+		{
+			report(RPT_ERR, "%s: unable to read font file \"%s\", using default iso-8859-15 font", drvthis->name, buf);
+		}
+		report(RPT_INFO, "%s: using font file \"%s\", encoding is \"%s\"", drvthis->name, buf, p->font_encoding);
+		fclose(font_file);
+	    }
+	}
+
 	/*
 	 * We need a little bit of extra memory in the frame buffer so that
 	 * all of the last 7-bit-long packet data will be within the frame
@@ -493,6 +592,14 @@
 			free(p->framebuf);
 		p->framebuf = NULL;
 
+		if (p->font != default_font)
+		{
+			free(p->font);
+			free(p->font_encoding);
+			p->font=default_font;
+			p->font_encoding=DEFAULT_FONT_ENCODING;
+		}
+
 		free(p);
 	}
 	drvthis->store_private_ptr(drvthis, NULL);
@@ -509,7 +616,7 @@
 {
 	PrivateData *p = drvthis->private_data;
 
-	strcpy(p->info, "SoundGraph iMON LCD driver v0.6 : 15c2:ffdc and 15c2:0038 ");
+	snprintf(p->info,INFO_MAXLEN,"SoundGraph iMON LCD driver v0.6 : 15c2:ffdc and 15c2:0038 Charset: %s",p->font_encoding);
 	return p->info;
 }
 
@@ -604,7 +711,7 @@
 	x *= p->cellwidth;
 	y *= p->bytesperline;
 
-	defn = &font[(unsigned char) ch];
+	defn = &(p->font[(unsigned char) ch]);
 
 	/* Copy character from font into frame buffer */
 	for (col = 0; col < p->cellwidth; col++) {
diff -Naur lcdproc-0.5.6-old/server/drivers/imonlcd_font.h lcdproc-0.5.6-new/server/drivers/imonlcd_font.h
--- lcdproc-0.5.6-old/server/drivers/imonlcd_font.h	2010-12-27 15:32:57.000000000 +0200
+++ lcdproc-0.5.6-new/server/drivers/imonlcd_font.h	2013-03-17 21:57:51.000000000 +0200
@@ -10,6 +10,8 @@
  * Created March 2009 by Jonathan Kyler for inclusion in lcdproc
  * Structure based on codeka's imonlcd patch by Dean Harding
  * Font based on Toshiba T6963 based LCD display driver font by Manuel Stahl
+ * Modified January 2010 by Sergey Umpelev <umpelev (at) gmail (dot) com>
+ * to enable loadable font support in the imonlcd driver
  *
  * Copyright (c) 2009, Jonathan Kyler <jkyler (at) users (dot) sourceforge (dot) net>
  *
@@ -73,7 +75,7 @@
  *  Character 160 is currently blank
  *  Characters 161-255 match ISO_8859-15 characters
  */
-static imon_font font[] = {
+static imon_font default_font[] = {
 	{ {0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } }, //   0 \u0020 space
 	{ {0x00, 0x7c, 0xa2, 0x8a, 0xa2, 0x7c } }, //   1 \u263a light smiley face
 	{ {0x00, 0x7c, 0xd6, 0xf6, 0xd6, 0x7c } }, //   2 \u263b dark smiley face
@@ -331,6 +333,7 @@
 	{ {0x00, 0xff, 0x12, 0x12, 0x12, 0x0c } }, // 254 \u00fe þ thorn
 	{ {0x00, 0x39, 0x85, 0x06, 0xbc, 0x00 } }  // 255 \u00ff ÿ y diaeresis
 };
+
 #endif
 
 #ifdef IMONLCD_FONT_DESC
