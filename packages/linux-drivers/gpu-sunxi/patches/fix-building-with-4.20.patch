diff -Nur a/driver/src/devicedrv/mali/linux/mali_memory_block_alloc.c b/driver/src/devicedrv/mali/linux/mali_memory_block_alloc.c
--- a/driver/src/devicedrv/mali/linux/mali_memory_block_alloc.c	2018-09-13 08:52:20.000000000 +0200
+++ b/driver/src/devicedrv/mali/linux/mali_memory_block_alloc.c	2018-12-08 12:22:51.978513336 +0100
@@ -309,9 +309,9 @@
 
 	list_for_each_entry(m_page, &block_mem->pfns, list) {
 		MALI_DEBUG_ASSERT(m_page->type == MALI_PAGE_NODE_BLOCK);
-		ret = vm_insert_pfn(vma, addr, _mali_page_node_get_pfn(m_page));
+		ret = vmf_insert_pfn(vma, addr, _mali_page_node_get_pfn(m_page));
 
-		if (unlikely(0 != ret)) {
+		if (unlikely(ret & VM_FAULT_ERROR)) {
 			return -EFAULT;
 		}
 		addr += _MALI_OSK_MALI_PAGE_SIZE;
diff -Nur a/driver/src/devicedrv/mali/linux/mali_memory_cow.c b/driver/src/devicedrv/mali/linux/mali_memory_cow.c
--- a/driver/src/devicedrv/mali/linux/mali_memory_cow.c	2018-09-13 08:52:20.000000000 +0200
+++ b/driver/src/devicedrv/mali/linux/mali_memory_cow.c	2018-12-08 12:27:17.681815893 +0100
@@ -532,10 +532,10 @@
 		 * flush which makes it way slower than remap_pfn_range or vm_insert_pfn.
 		ret = vm_insert_page(vma, addr, page);
 		*/
-		ret = vm_insert_pfn(vma, addr, _mali_page_node_get_pfn(m_page));
+		ret = vmf_insert_pfn(vma, addr, _mali_page_node_get_pfn(m_page));
 
-		if (unlikely(0 != ret)) {
-			return ret;
+		if (unlikely(ret & VM_FAULT_ERROR)) {
+			return -EFAULT;
 		}
 		addr += _MALI_OSK_MALI_PAGE_SIZE;
 	}
@@ -569,9 +569,9 @@
 
 	list_for_each_entry(m_page, &cow->pages, list) {
 		if ((count >= offset) && (count < offset + num)) {
-			ret = vm_insert_pfn(vma, vaddr, _mali_page_node_get_pfn(m_page));
+			ret = vmf_insert_pfn(vma, vaddr, _mali_page_node_get_pfn(m_page));
 
-			if (unlikely(0 != ret)) {
+			if (unlikely(ret & VM_FAULT_ERROR)) {
 				if (count == offset) {
 					return _MALI_OSK_ERR_FAULT;
 				} else {
diff -Nur a/driver/src/devicedrv/mali/linux/mali_memory_os_alloc.c b/driver/src/devicedrv/mali/linux/mali_memory_os_alloc.c
--- a/driver/src/devicedrv/mali/linux/mali_memory_os_alloc.c	2018-12-08 12:15:38.000000000 +0100
+++ b/driver/src/devicedrv/mali/linux/mali_memory_os_alloc.c	2018-12-08 12:30:37.730811640 +0100
@@ -376,9 +376,9 @@
 		ret = vm_insert_page(vma, addr, page);
 		*/
 		page = m_page->page;
-		ret = vm_insert_pfn(vma, addr, page_to_pfn(page));
+		ret = vmf_insert_pfn(vma, addr, page_to_pfn(page));
 
-		if (unlikely(0 != ret)) {
+		if (unlikely(ret & VM_FAULT_ERROR)) {
 			return -EFAULT;
 		}
 		addr += _MALI_OSK_MALI_PAGE_SIZE;
@@ -414,16 +414,11 @@
 
 			vm_end -= _MALI_OSK_MALI_PAGE_SIZE;
 			if (mapping_page_num > 0) {
-				ret = vm_insert_pfn(vma, vm_end, page_to_pfn(m_page->page));
+				ret = vmf_insert_pfn(vma, vm_end, page_to_pfn(m_page->page));
 
-				if (unlikely(0 != ret)) {
-					/*will return -EBUSY If the page has already been mapped into table, but it's OK*/
-					if (-EBUSY == ret) {
-						break;
-					} else {
-						MALI_DEBUG_PRINT(1, ("OS Mem: mali_mem_os_resize_cpu_map_locked failed, ret = %d, offset is %d,page_count is %d\n",
-								     ret,  offset + mapping_page_num, os_mem->count));
-					}
+				if (unlikely(ret & VM_FAULT_ERROR)) {
+					MALI_DEBUG_PRINT(1, ("OS Mem: mali_mem_os_resize_cpu_map_locked failed, ret = %d, offset is %d,page_count is %d\n",
+							     ret,  offset + mapping_page_num, os_mem->count));
 					return _MALI_OSK_ERR_FAULT;
 				}
 			} else {
@@ -437,16 +432,11 @@
 		list_for_each_entry(m_page, &os_mem->pages, list) {
 			if (count >= offset) {
 
-				ret = vm_insert_pfn(vma, vstart, page_to_pfn(m_page->page));
+				ret = vmf_insert_pfn(vma, vstart, page_to_pfn(m_page->page));
 
-				if (unlikely(0 != ret)) {
-					/*will return -EBUSY If the page has already been mapped into table, but it's OK*/
-					if (-EBUSY == ret) {
-						break;
-					} else {
-						MALI_DEBUG_PRINT(1, ("OS Mem: mali_mem_os_resize_cpu_map_locked failed, ret = %d, count is %d, offset is %d,page_count is %d\n",
-								     ret, count, offset, os_mem->count));
-					}
+				if (unlikely(ret & VM_FAULT_ERROR)) {
+					MALI_DEBUG_PRINT(1, ("OS Mem: mali_mem_os_resize_cpu_map_locked failed, ret = %d, count is %d, offset is %d,page_count is %d\n",
+							     ret, count, offset, os_mem->count));
 					return _MALI_OSK_ERR_FAULT;
 				}
 			}
diff -Nur a/driver/src/devicedrv/mali/linux/mali_memory_secure.c b/driver/src/devicedrv/mali/linux/mali_memory_secure.c
--- a/driver/src/devicedrv/mali/linux/mali_memory_secure.c	2018-12-08 12:15:38.000000000 +0100
+++ b/driver/src/devicedrv/mali/linux/mali_memory_secure.c	2018-12-08 12:31:05.461174554 +0100
@@ -132,9 +132,9 @@
 		MALI_DEBUG_ASSERT(0 == size % _MALI_OSK_MALI_PAGE_SIZE);
 
 		for (j = 0; j < size / _MALI_OSK_MALI_PAGE_SIZE; j++) {
-			ret = vm_insert_pfn(vma, addr, PFN_DOWN(phys));
+			ret = vmf_insert_pfn(vma, addr, PFN_DOWN(phys));
 
-			if (unlikely(0 != ret)) {
+			if (unlikely(ret & VM_FAULT_ERROR)) {
 				return -EFAULT;
 			}
 			addr += _MALI_OSK_MALI_PAGE_SIZE;
diff -Nur a/driver/src/devicedrv/mali/linux/mali_osk_time.c b/driver/src/devicedrv/mali/linux/mali_osk_time.c
--- a/driver/src/devicedrv/mali/linux/mali_osk_time.c	2018-09-13 08:52:20.000000000 +0200
+++ b/driver/src/devicedrv/mali/linux/mali_osk_time.c	2018-12-08 12:32:12.632086846 +0100
@@ -53,7 +53,5 @@
 
 u64 _mali_osk_boot_time_get_ns(void)
 {
-	struct timespec tsval;
-	get_monotonic_boottime(&tsval);
-	return (u64)timespec_to_ns(&tsval);
+	return (u64)ktime_to_ns(ktime_get_boottime());
 }
